When you type a URL like https://www.google.com into your browser and press Enter, several things happen behind the scenes. In this blog post, we will go through the process step-by-step and explain what happens at each stage.

    DNS request: As soon as you hit Enter, your browser will try to resolve the hostname into an IP address. To do this, your computer makes a DNS request for www.google.com. This request is sent to the IP address of the domain servers configured on your computer. For example purposes, let’s say we use one of Google’s name servers, 8.8.8.8. The request is sent out to 8.8.8.8 on UDP port 53 (the default DNS port). The UDP header includes information about where to send return packets, such as an IP address which for your home computer we’ll call 192.168.0.5. You have a router at home that probably has some kind of internal firewall for routing these packets. That firewall checks if you’re allowed to send the packets, and generally outbound traffic is not filtered on home routers. 
    After that you have to deal with Network Address Translation (NAT). Since there are multiple computers on your home network with their own private (internal to your home network), but only one public IP address (the one that the internet sees), if all the home network computers request a DNS response that is returned to port 53, the router won’t know which computer to send it to. So instead, these client requests are mapped to quasi-random high numbered ports for each computer. The router will rewrite the packet header with the public IP and the mapped port (let’s say it is 147.47.47.47 port 10000), listen for a response on those ports, and when it gets one will forward that packet back to the computer that originally requested the packet that caused the router to listen on that port.
   
    TCP/IP: Once the IP address of the server is obtained, your browser establishes a TCP/IP connection with the server. This connection is used to send and receive data between your browser and the server.

    Firewall: The server may have a firewall that checks incoming traffic to ensure that it is safe and authorized. If the traffic is deemed unsafe or unauthorized, the firewall will block it.

    HTTPS/SSL: If the server is using HTTPS (HTTP Secure), your browser will establish a secure connection with the server using SSL (Secure Sockets Layer) or TLS (Transport Layer Security). This ensures that any data sent between your browser and the server is encrypted and secure.

    Load-balancer: If the server is part of a cluster of servers, a load-balancer may be used to distribute incoming traffic across the servers. This ensures that no single server is overloaded with too much traffic.

    Web server: Once the connection is established, the server sends the requested web page to your browser. The web server is responsible for processing the request and sending the appropriate response. If the connection is secure the port used is 443 and the browser will have the https protocol shown otherwise with http the webserver receives traffic via port 80. The server maps the url according to preconfigured routes and produces the required response with a 200 ok status code or a 404 not found otherwise.

    Application server: If the web page requires dynamic content, such as data from a database, the request is passed to an application server. The application server processes the request and generates the dynamic content.

    Database: If the web page requires data from a database, the application server retrieves the data from the database and sends it back to the web server. The web server then sends the complete web page, including any dynamic content, to your browser.

In conclusion, when you type https://www.google.com into your browser and press Enter, your computer sends a DNS request to resolve the hostname into an IP address, establishes a TCP/IP connection with the server, checks the incoming traffic with a firewall, establishes a secure connection with SSL/TLS, distributes incoming traffic across servers with a load-balancer, processes the request with a web server, generates dynamic content with an application server, retrieves data from a database, and finally sends the complete web page to your browser. This entire process happens in a matter of seconds, allowing you to access the web page you requested almost instantly.
